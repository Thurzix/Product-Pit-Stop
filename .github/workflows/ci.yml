name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Job 1: Lint e valida√ß√£o de c√≥digo
  lint:
    name: üîç Lint Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies (Backend)
        working-directory: ./backend
        run: npm ci

      - name: Install dependencies (Frontend)
        working-directory: ./project
        run: npm ci

      - name: Lint Backend
        working-directory: ./backend
        run: npm run lint || echo "Lint not configured"
        continue-on-error: true

      - name: Lint Frontend
        working-directory: ./project
        run: npm run lint || echo "Lint not configured"
        continue-on-error: true

  # Job 2: Build do projeto
  build:
    name: üèóÔ∏è Build Project
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies (Backend)
        working-directory: ./backend
        run: npm ci

      - name: Install dependencies (Frontend)
        working-directory: ./project
        run: npm ci

      - name: Build Frontend
        working-directory: ./project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: project/dist
          retention-days: 7

  # Job 3: Testes automatizados
  test:
    name: üß™ Run Tests
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies (Backend)
        working-directory: ./backend
        run: npm ci

      - name: Install dependencies (Frontend)
        working-directory: ./project
        run: npm ci

      - name: Run Backend tests
        working-directory: ./backend
        run: npm test || echo "Tests not configured"
        continue-on-error: true

      - name: Run Frontend tests
        working-directory: ./project
        run: npm test || echo "Tests not configured"
        continue-on-error: true

  # Job 4: An√°lise de seguran√ßa
  security:
    name: üîí Security Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security audit (Backend)
        working-directory: ./backend
        run: npm audit --audit-level=moderate || echo "Security issues found"
        continue-on-error: true

      - name: Run security audit (Frontend)
        working-directory: ./project
        run: npm audit --audit-level=moderate || echo "Security issues found"
        continue-on-error: true

  # Job 5: Notifica√ß√£o de sucesso
  success:
    name: ‚úÖ Pipeline Success
    runs-on: ubuntu-latest
    needs: [lint, build, test, security]
    if: success()
    
    steps:
      - name: Success message
        run: |
          echo "‚úÖ Pipeline executado com sucesso!"
          echo "‚úÖ Branch: ${{ github.ref_name }}"
          echo "‚úÖ Commit: ${{ github.sha }}"
          echo "‚úÖ Author: ${{ github.actor }}"